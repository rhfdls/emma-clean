networks:
  emma-network:
    driver: bridge

services:
  postgres:
    networks:
      - emma-network
    image: postgres:16-alpine
    container_name: emma_postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=emma
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: emma_azurite
    command: "azurite-blob --blobHost 0.0.0.0 --blobPort 10010"
    ports:
      - "10010:10010"
    volumes:
      - azurite_data:/data

  emmaapi:
    build:
      context: .
      dockerfile: Emma.Api/Dockerfile
    container_name: emma_api
    ports:
      - "5262:80"
    networks:
      - emma-network
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSql=${ConnectionStrings__PostgreSql}
      - COSMOSDB__ACCOUNTENDPOINT=${COSMOSDB__ACCOUNTENDPOINT}
      - COSMOSDB__ACCOUNTKEY=${COSMOSDB__ACCOUNTKEY}
      - COSMOSDB__DATABASENAME=${COSMOSDB__DATABASENAME}
      - COSMOSDB__CONTAINERNAME=${COSMOSDB__CONTAINERNAME}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - AzureOpenAI__ApiKey=${AzureOpenAI__ApiKey}
      - AzureOpenAI__Endpoint=${AzureOpenAI__Endpoint}
      - AzureOpenAI__DeploymentName=${AzureOpenAI__DeploymentName}
      - AzureOpenAI__ApiVersion=${AzureOpenAI__ApiVersion}
      - AzureAIFoundry__Endpoint=${AzureAIFoundry__Endpoint}
      - AzureAIFoundry__ApiKey=${AzureAIFoundry__ApiKey}
      - AzureAIFoundry__DeploymentName=${AzureAIFoundry__DeploymentName}
      - AzureAIFoundry__MaxTokens=${AzureAIFoundry__MaxTokens}
      - AzureAIFoundry__Temperature=${AzureAIFoundry__Temperature}
      - Swagger__BaseUrl=${Swagger__BaseUrl}
      - Swagger__ExternalUrl=${Swagger__ExternalUrl}
      - AzureStorage__AccountName=${AzureStorage__AccountName}
      - AzureStorage__AccountKey=${AzureStorage__AccountKey}
      - AzureSearch__ServiceName=${AzureSearch__ServiceName}
      - AzureSearch__ApiKey=${AzureSearch__ApiKey}
      - AzureSearch__Endpoint=${AzureSearch__Endpoint}
      - KeyVault__Name=${KeyVault__Name}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - FUB_API_KEY=${FUB_API_KEY}
      - FUB_API_BASE_URL=${FUB_API_BASE_URL}

  emmaapi-dev:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: emma_api_dev
    working_dir: /app
    volumes:
      - .:/app
    networks:
      - emma-network
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSql=${ConnectionStrings__PostgreSql}
      - COSMOSDB__ACCOUNTENDPOINT=${COSMOSDB__ACCOUNTENDPOINT}
      - COSMOSDB__ACCOUNTKEY=${COSMOSDB__ACCOUNTKEY}
      - COSMOSDB__DATABASENAME=${COSMOSDB__DATABASENAME}
      - COSMOSDB__CONTAINERNAME=${COSMOSDB__CONTAINERNAME}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - AzureOpenAI__ApiKey=${AzureOpenAI__ApiKey}
      - AzureOpenAI__Endpoint=${AzureOpenAI__Endpoint}
      - AzureOpenAI__DeploymentName=${AzureOpenAI__DeploymentName}
      - AzureOpenAI__ApiVersion=${AzureOpenAI__ApiVersion}
      - AzureAIFoundry__Endpoint=${AzureAIFoundry__Endpoint}
      - AzureAIFoundry__ApiKey=${AzureAIFoundry__ApiKey}
      - AzureAIFoundry__DeploymentName=${AzureAIFoundry__DeploymentName}
      - AzureAIFoundry__MaxTokens=${AzureAIFoundry__MaxTokens}
      - AzureAIFoundry__Temperature=${AzureAIFoundry__Temperature}
      - Swagger__BaseUrl=${Swagger__BaseUrl}
      - Swagger__ExternalUrl=${Swagger__ExternalUrl}
      - AzureStorage__AccountName=${AzureStorage__AccountName}
      - AzureStorage__AccountKey=${AzureStorage__AccountKey}
      - AzureSearch__ServiceName=${AzureSearch__ServiceName}
      - AzureSearch__ApiKey=${AzureSearch__ApiKey}
      - AzureSearch__Endpoint=${AzureSearch__Endpoint}
      - KeyVault__Name=${KeyVault__Name}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - FUB_API_KEY=${FUB_API_KEY}
      - FUB_API_BASE_URL=${FUB_API_BASE_URL}

  emmamigration:
    build:
      context: .
      dockerfile: Emma.Api/Dockerfile
      target: migration
    volumes:
      - .:/src
    networks:
      - emma-network
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSql=${ConnectionStrings__PostgreSql}
      - COSMOSDB__ACCOUNTENDPOINT=${COSMOSDB__ACCOUNTENDPOINT}
      - COSMOSDB__ACCOUNTKEY=${COSMOSDB__ACCOUNTKEY}
      - COSMOSDB__DATABASENAME=${COSMOSDB__DATABASENAME}
      - COSMOSDB__CONTAINERNAME=${COSMOSDB__CONTAINERNAME}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - AzureOpenAI__ApiKey=${AzureOpenAI__ApiKey}
      - AzureOpenAI__Endpoint=${AzureOpenAI__Endpoint}
      - AzureOpenAI__DeploymentName=${AzureOpenAI__DeploymentName}
      - AzureOpenAI__ApiVersion=${AzureOpenAI__ApiVersion}
      - AzureAIFoundry__Endpoint=${AzureAIFoundry__Endpoint}
      - AzureAIFoundry__ApiKey=${AzureAIFoundry__ApiKey}
      - AzureAIFoundry__DeploymentName=${AzureAIFoundry__DeploymentName}
      - AzureAIFoundry__MaxTokens=${AzureAIFoundry__MaxTokens}
      - AzureAIFoundry__Temperature=${AzureAIFoundry__Temperature}
      - Swagger__BaseUrl=${Swagger__BaseUrl}
      - Swagger__ExternalUrl=${Swagger__ExternalUrl}
      - AzureStorage__AccountName=${AzureStorage__AccountName}
      - AzureStorage__AccountKey=${AzureStorage__AccountKey}
      - AzureSearch__ServiceName=${AzureSearch__ServiceName}
      - AzureSearch__ApiKey=${AzureSearch__ApiKey}
      - AzureSearch__Endpoint=${AzureSearch__Endpoint}
      - KeyVault__Name=${KeyVault__Name}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - FUB_API_KEY=${FUB_API_KEY}
      - FUB_API_BASE_URL=${FUB_API_BASE_URL}


  emmaweb:
    build:
      context: ./Emma.Web
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://emmaapi:80
    container_name: emma_web
    ports:
      - "3000:80"
    networks:
      - emma-network
    depends_on:
      - emmaapi
    env_file:
      - .env
    # Frontend typically needs fewer environment variables than API

volumes:
  pgdata:
  azurite_data:
