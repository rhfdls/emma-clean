{
  "agentId": "emma-orchestrator-v1",
  "name": "EMMA Orchestrator Agent",
  "description": "AI-first CRM orchestration agent that coordinates multi-agent workflows, manages intent routing, and provides intelligent context propagation across specialized agents",
  "version": "1.0.0",
  "type": "orchestrator",
  "protocol": "A2A",
  "capabilities": [
    {
      "name": "IntentClassification",
      "description": "Classifies user intents and routes requests to appropriate specialized agents",
      "inputTypes": ["text", "conversation_context"],
      "outputTypes": ["intent_classification", "routing_decision"],
      "confidence": 0.95,
      "supportedLanguages": ["en"]
    },
    {
      "name": "WorkflowOrchestration",
      "description": "Orchestrates multi-step workflows across multiple agents with state management",
      "inputTypes": ["workflow_definition", "agent_responses"],
      "outputTypes": ["workflow_state", "next_actions"],
      "confidence": 0.90,
      "supportedLanguages": ["en"]
    },
    {
      "name": "ContextIntelligence",
      "description": "Analyzes conversation context and maintains interaction history for intelligent routing",
      "inputTypes": ["conversation_history", "user_profile"],
      "outputTypes": ["context_analysis", "recommendations"],
      "confidence": 0.88,
      "supportedLanguages": ["en"]
    },
    {
      "name": "AgentCoordination",
      "description": "Coordinates communication between specialized agents and manages agent-to-agent handoffs",
      "inputTypes": ["agent_requests", "agent_responses"],
      "outputTypes": ["coordination_plan", "handoff_instructions"],
      "confidence": 0.92,
      "supportedLanguages": ["en"]
    }
  ],
  "supportedIntents": [
    "ContactManagement",
    "InteractionAnalysis", 
    "SchedulingAndTasks",
    "Communication",
    "MarketIntelligence",
    "GeneralInquiry",
    "DataAnalysis",
    "ReportGeneration",
    "WorkflowAutomation"
  ],
  "supportedIndustries": [
    "real_estate",
    "financial_services",
    "healthcare",
    "technology",
    "manufacturing",
    "retail",
    "professional_services"
  ],
  "endpoints": {
    "primary": {
      "url": "/api/agents/orchestrator",
      "method": "POST",
      "contentType": "application/json",
      "authentication": "bearer_token"
    },
    "health": {
      "url": "/api/agents/orchestrator/health",
      "method": "GET",
      "contentType": "application/json"
    },
    "metrics": {
      "url": "/api/agents/orchestrator/metrics",
      "method": "GET",
      "contentType": "application/json",
      "authentication": "bearer_token"
    },
    "capabilities": {
      "url": "/api/agents/orchestrator/capabilities",
      "method": "GET",
      "contentType": "application/json"
    }
  },
  "inputSchema": {
    "type": "object",
    "properties": {
      "requestId": {
        "type": "string",
        "description": "Unique request identifier"
      },
      "traceId": {
        "type": "string", 
        "description": "Distributed tracing identifier"
      },
      "intent": {
        "type": "string",
        "enum": ["ContactManagement", "InteractionAnalysis", "SchedulingAndTasks", "Communication", "MarketIntelligence", "GeneralInquiry", "DataAnalysis", "ReportGeneration", "WorkflowAutomation"],
        "description": "Classified intent for the request"
      },
      "userInput": {
        "type": "string",
        "description": "Original user input text"
      },
      "conversationId": {
        "type": "string",
        "description": "Conversation session identifier"
      },
      "context": {
        "type": "object",
        "description": "Additional context information",
        "properties": {
          "userId": {"type": "string"},
          "industry": {"type": "string"},
          "previousIntents": {"type": "array", "items": {"type": "string"}},
          "contactContext": {"type": "object"}
        }
      },
      "urgency": {
        "type": "string",
        "enum": ["Low", "Medium", "High", "Critical"],
        "description": "Request urgency level"
      },
      "orchestrationMethod": {
        "type": "string",
        "enum": ["custom", "azure_foundry"],
        "description": "Orchestration method to use"
      }
    },
    "required": ["requestId", "userInput", "conversationId"]
  },
  "outputSchema": {
    "type": "object",
    "properties": {
      "requestId": {
        "type": "string",
        "description": "Original request identifier"
      },
      "traceId": {
        "type": "string",
        "description": "Distributed tracing identifier"
      },
      "success": {
        "type": "boolean",
        "description": "Whether the request was processed successfully"
      },
      "content": {
        "type": "string",
        "description": "Response content or result"
      },
      "confidence": {
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "description": "Confidence score of the response"
      },
      "agentId": {
        "type": "string",
        "description": "ID of the agent that processed the request"
      },
      "processingTimeMs": {
        "type": "number",
        "description": "Processing time in milliseconds"
      },
      "nextIntent": {
        "type": "string",
        "description": "Suggested next intent for follow-up"
      },
      "requiresFollowUp": {
        "type": "boolean",
        "description": "Whether this response requires follow-up actions"
      },
      "data": {
        "type": "object",
        "description": "Additional structured data"
      },
      "errorMessage": {
        "type": "string",
        "description": "Error message if success is false"
      },
      "orchestrationMethod": {
        "type": "string",
        "description": "Orchestration method used"
      }
    },
    "required": ["requestId", "success", "confidence"]
  },
  "security": {
    "authentication": {
      "type": "bearer_token",
      "description": "JWT bearer token authentication required"
    },
    "authorization": {
      "roles": ["agent", "orchestrator", "admin"],
      "permissions": ["agent.execute", "workflow.orchestrate"]
    },
    "dataProtection": {
      "encryption": "TLS 1.2+",
      "piiHandling": "compliant",
      "auditLogging": "enabled"
    }
  },
  "monitoring": {
    "healthCheck": {
      "endpoint": "/api/agents/orchestrator/health",
      "interval": "30s",
      "timeout": "5s"
    },
    "metrics": {
      "endpoint": "/api/agents/orchestrator/metrics",
      "includes": ["request_count", "response_time", "success_rate", "confidence_score"]
    },
    "logging": {
      "level": "info",
      "structured": true,
      "traceId": "required"
    },
    "alerts": {
      "successRateThreshold": 0.95,
      "responseTimeThreshold": 2000,
      "errorRateThreshold": 0.05
    }
  },
  "compliance": {
    "standards": ["SOC2", "GDPR", "CCPA"],
    "dataRetention": "7 years",
    "auditTrail": "enabled",
    "responsibleAI": {
      "contentSafety": "enabled",
      "biasDetection": "enabled",
      "explainability": "supported"
    }
  },
  "compatibility": {
    "azureAIFoundry": {
      "supported": true,
      "version": "1.0",
      "migrationReady": true,
      "connectedAgents": "supported"
    },
    "a2aProtocol": {
      "version": "1.0",
      "features": ["discovery", "registration", "communication", "monitoring"]
    },
    "platforms": ["azure", "on-premises", "hybrid"]
  },
  "dependencies": {
    "services": [
      {
        "name": "Azure OpenAI",
        "type": "ai_service",
        "required": true
      },
      {
        "name": "Azure AI Content Safety",
        "type": "safety_service", 
        "required": true
      },
      {
        "name": "CosmosDB",
        "type": "database",
        "required": true
      },
      {
        "name": "Application Insights",
        "type": "telemetry",
        "required": false
      }
    ],
    "agents": [
      {
        "agentId": "contact-management-agent",
        "relationship": "orchestrates",
        "required": false
      },
      {
        "agentId": "interaction-analysis-agent", 
        "relationship": "orchestrates",
        "required": false
      },
      {
        "agentId": "scheduling-agent",
        "relationship": "orchestrates", 
        "required": false
      }
    ]
  },
  "metadata": {
    "author": "EMMA AI Team",
    "createdAt": "2024-12-08T00:00:00Z",
    "updatedAt": "2024-12-08T00:00:00Z",
    "tags": ["orchestrator", "crm", "ai-first", "azure-foundry", "a2a"],
    "documentation": "https://docs.emma-ai.com/agents/orchestrator",
    "repository": "https://github.com/emma-ai/agents/orchestrator",
    "license": "MIT",
    "support": {
      "email": "support@emma-ai.com",
      "documentation": "https://docs.emma-ai.com",
      "community": "https://community.emma-ai.com"
    }
  },
  "performance": {
    "benchmarks": {
      "averageResponseTime": "150ms",
      "throughput": "1000 requests/minute",
      "successRate": "99.5%",
      "averageConfidence": "0.92"
    },
    "scalability": {
      "maxConcurrentRequests": 100,
      "horizontalScaling": "supported",
      "loadBalancing": "supported"
    }
  },
  "testing": {
    "unitTests": "enabled",
    "integrationTests": "enabled", 
    "performanceTests": "enabled",
    "a2aCompatibilityTests": "enabled",
    "coverageThreshold": 85
  }
}
