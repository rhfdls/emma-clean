# .NET Core
bin/
obj/
*.dll
*.pdb
*.cache
*.sourcelink.json
*.AssemblyInfo.cs
*.AssemblyInfoInputs.cache
*.GeneratedMSBuildEditorConfig.editorconfig
*.GlobalUsings.g.cs
*.csproj.AssemblyReference.cache
*.csproj.CoreCompileInputs.cache
*.csproj.FileListAbsolute.txt
*.csproj.Up2Date
*.genruntimeconfig.cache
*.xml
*.targets
*.nuget.*
project.assets.json
project.nuget.cache

# obj/
*.user
*.userosscache
*.suo
*.userprefs

# Visual Studio
.vs/
*.ntvs*
*.njsproj
*.sln.docstates

# VS Code
.vscode/
*.code-workspace

# Environment and configuration files
.env
.env.*
appsettings.Development.json
appsettings.Local.json
secrets.json
local.env
# Do NOT ignore example/template files
!env.example
!env.template
!appsettings.Development.json.example

# Logs
logs/
*.log

# IDE
.idea/
*.swp
*.swo

# Build output
dist/
build/

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/

# NuGet v3's project.json files produces more ignorable files
*.nupkg
*.nuget.props
*.nuget.targets

# Local development
local.env
*.local.*

# IDE specific files
.DS_Store
Thumbs.db

# Visual Studio cache/options directory
.vs/

# Visual Studio Code workspace settings
.vscode/

# Windows image file caches
Thumbs.db
ehthumbs.db

# Windows Installer files
*.cab
*.msi
*.msix
*.msixbundle
*.mspkg
*.appx
*.appxbundle
*.appxupload

# Windows shortcuts
*.lnk
# Database Migrations

## Local Development

### Prerequisites
- Docker Desktop
- .NET SDK 7.0 or later

### First-time Setup
# 1. Run the setup script:
   `powershell
   .\setup.ps1
# Apply pending migrations
# dotnet ef database update --project "Emma.Data" --startup-project "Emma.Api"

# Create a new migration
# dotnet ef migrations add YourMigrationName --project "Emma.Data" --startup-project "Emma.Api"
Common Issues
Database Connection Issues
Ensure PostgreSQL is running: docker-compose ps
Check logs: docker-compose logs postgres
Migration Issues
If migrations fail, try:

dotnet ef migrations remove --project "Emma.Data" --startup-project "Emma.Api"
dotnet ef migrations add FixMigration --project "Emma.Data" --startup-project "Emma.Api"
dotnet ef database update --project "Emma.Data" --startup-project "Emma.Api"

Production
Ensure ASPNETCORE_ENVIRONMENT is set to Production
Verify connection strings in environment variables
Run migrations as part of your CI/CD pipeline "@ | Out-File -FilePath "MIGRATION-README.md" -Encoding UTF8 -Force


# 7. Let's update the .gitignore to include our local files:

# `powershell
# @"

# Local development files
# appsettings.Development.json
#.env
# docker-compose.override.yml

# Build outputs
bin/
#obj/
